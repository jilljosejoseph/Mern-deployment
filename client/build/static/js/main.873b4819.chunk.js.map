{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/EditPet.jsx","components/ViewPet.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","animals","setAnimals","useEffect","axios","get","then","res","console","log","data","catch","errors","map","animal","i","className","key","_id","pName","pType","to","PetForm","setpName","setpType","pDescription","setpDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","setErrors","onSubmit","e","preventDefault","petItem","post","navigate","type","onChange","target","value","properties","message","EditPet","put","ViewPet","onClick","delete","err","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.873b4819.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nconst Display = props => {\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    useEffect( () => {\r\n        axios.get(\"http://localhost:8000/api/pet\")\r\n        .then(res => {\r\n            console.log(res);\r\n            setAnimals(res.data);\r\n        })\r\n        .catch(errors => console.log(errors));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {animals.map( (animal, i) => \r\n                <div className=\"card mb-2\" key={animal._id}>\r\n                    <div className=\"card-header bg-primary text-light\">{animal.pName}</div>\r\n                    <div className=\"card-body\">\r\n                        <p>Type: {animal.pType}</p>\r\n                        <p>Actions</p>\r\n                        <Link className=\"btn btn-outline-info\" to={`/edit/${animal._id}`}>edit</Link>\r\n                        <Link className=\"btn btn-outline-info\" to={`/view/${animal._id}`}>details</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetForm = props => {\r\n    const [pName, setpName] = useState(\"\");\r\n    const [pType, setpType] = useState(\"\");\r\n    const [pDescription, setpDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const CreatePet = e => {\r\n        e.preventDefault();\r\n        const petItem = {pName, pType, pDescription, skill1, skill2, skill3};\r\n        axios.post(\"http://localhost:8000/api/pet\", petItem)\r\n            .then( res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\")\r\n                }\r\n            }).catch(errors => console.log(errors));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreatePet}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpName(e.target.value)} />\r\n                            {errors.pName ? <p className=\"text-danger\">{errors.pName.properties.message}</p> : \"\"}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Type:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpType(e.target.value)} />\r\n                            {errors.pType ? <p className=\"text-danger\">{errors.pType.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Description:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpDescription(e.target.value)} />\r\n                            {errors.pDescription ? <p className=\"text-danger\">{errors.pDescription.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 1:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} />\r\n                            {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 2:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} />\r\n                            {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 3:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} />\r\n                            {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info\" value=\"Add Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PetForm;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst EditPet = props => {\r\n    const [pName, setpName] = useState(\"\");\r\n    const [pType, setpType] = useState(\"\");\r\n    const [pDescription, setpDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setpName(res.data.pName);\r\n                setpType(res.data.pType);\r\n                setpDescription(res.data.pDescription);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const UpdatePet = e => {\r\n        e.preventDefault();\r\n        const petItem = {pName, pType, pDescription, skill1, skill2, skill3};\r\n        axios.put(`http://localhost:8000/api/pet/${props._id}`, petItem)\r\n            .then( res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\")\r\n                }\r\n            }).catch(errors => console.log(errors));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdatePet}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpName(e.target.value)} value={pName} />\r\n                            {errors.pName ? <p className=\"text-danger\">{errors.pName.properties.message}</p> : \"\"}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Type:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpType(e.target.value)} value={pType} />\r\n                            {errors.pType ? <p className=\"text-danger\">{errors.pType.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Description:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setpDescription(e.target.value)} value={pDescription} />\r\n                            {errors.pDescription ? <p className=\"text-danger\">{errors.pDescription.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 1:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} value={skill1} />\r\n                            {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 2:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} value={skill2} />\r\n                            {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 3:</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} value={skill3} />\r\n                            {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p> : \"\"}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info\" value=\"Edit Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditPet;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst ViewPet = props => {\r\n    const [pName, setpName] = useState(\"\");\r\n    const [pType, setpType] = useState(\"\");\r\n    const [pDescription, setpDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pet/view/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setpName(res.data.pName);\r\n                setpType(res.data.pType);\r\n                setpDescription(res.data.pDescription);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\")\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            \r\n            <form className=\"col-sm-8 offset-sm-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Name:</label><br />\r\n                            <label>{pName}</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Type:</label><br />\r\n                            <label>{pType}</label>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Pet Description:</label><br />\r\n                            <label>{pDescription}</label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 1:</label><br />\r\n                            <label>{skill1}</label>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 2:</label><br />\r\n                            <label>{skill2}</label>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Skill 3:</label><br />\r\n                            <label>{skill3}</label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"col\">\r\n                <button className=\"btn btn-danger\" onClick={remove}>Adopt  :{pName}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ViewPet;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from './components/Display';\nimport { Link, Router } from '@reach/router';\nimport PetForm from './components/PetForm';\nimport EditPet from './components/EditPet';\nimport ViewPet from './components/ViewPet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Pet Shelter <Link className=\"btn btn-info float-right mt-2\" to=\"/new\">Add a pet to shelter</Link></h1>\n\n\n      <h3>These pets are looking for a good home</h3>\n\n      <Router className=\"my-3\">\n        <Display path=\"/\" />\n        <PetForm path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <ViewPet path=\"/view/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}